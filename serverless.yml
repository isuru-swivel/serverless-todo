service: todo-app
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can define service wide environment variables here
  environment:
    DYNAMODB_TABLE: !Ref notesTable

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

plugins:
  - serverless-offline
  - serverless-iam-roles-per-function

functions:
  createNote:
    handler: handler.createNote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
        Resource: !GetAtt notesTable.Arn
    events:
      - http:
          path: notes
          method: post

  updateNote:
    handler: handler.updateNote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:UpdateItem
        Resource: !GetAtt notesTable.Arn
    events:
      - http:
          path: notes/{id}
          method: put

  deleteNote:
    handler: handler.deleteNote
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:DeleteItem
        Resource: !GetAtt notesTable.Arn
    events:
      - http:
          path: notes/{id}
          method: delete

  getAllNotes:
    handler: handler.getAllNotes
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: !GetAtt notesTable.Arn
    events:
      - http:
          path: notes
          method: get

# you can add CloudFormation resource templates here
resources:
  Resources:
    todosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: todos
        AttributeDefinitions:
          - AttributeName: taskId
            AttributeType: S
        KeySchema:
          - AttributeName: taskId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST


